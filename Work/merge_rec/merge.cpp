// This is code is contributed by rathbhupendra
// Recursive C++ program for merge sort
#include<bits/stdc++.h>
using namespace std;

// Function to merge the two haves
// arr[l..m] and arr[m+1..r] of array arr[]
void merge(int arr[], int l, int m, int r);

// l is for left index and r is
// right index of the sub-array
// of arr to be sorted
void mergeSort(int arr[], int l, int r)
{
	if (l < r)
	{
		
		// Same as (l+r)/2 but avoids
		// overflow for large l & h
		int m = l + (r - l) / 2;
		mergeSort(arr, l, m);
		mergeSort(arr, m + 1, r);
		merge(arr, l, m, r);
	}
}

// Function to merge the two haves arr[l..m]
// and arr[m+1..r] of array arr[]
void merge(int arr[], int l, int m, int r)
{
	int k;
	int n1 = m - l + 1;
	int n2 = r - m;

	// Create temp arrays
	int L[n1], R[n2];

	// Copy data to temp arrays L[] and R[]
	for(int i = 0; i < n1; i++)
		L[i] = arr[l + i];
	for(int j = 0; j < n2; j++)
		R[j] = arr[m + 1+ j];

	// Merge the temp arrays
	// back into arr[l..r]
	int i = 0;
	int j = 0;
	k = l;
	
	while (i < n1 && j < n2)
	{
		if (L[i] <= R[j])
		{
			arr[k] = L[i];
			i++;
		}
		else
		{
			arr[k] = R[j];
			j++;
		}
		k++;
	}

	// Copy the remaining elements
	// of L[], if there are any
	while (i < n1)
	{
		arr[k] = L[i];
		i++;
		k++;
	}

	// Copy the remaining elements
	// of R[], if there are any
	while (j < n2)
	{
		arr[k] = R[j];
		j++;
		k++;
	}
}

// A utility function to print contents of arr
void printArr(int arr[], int n)
{
	int i;
	for (i = 0; i < n; ++i)
		cout << arr[i] << " ";
}

// Driver code
int main()
{
	int arr[] = { 533362, -825544, 297368, -450618, -741966, 467772, -753989, 886754, 300634, 385144, 510540, 208817, 20770, 501223, -390972, 592461, -214034, 346874, 689094, 226073, 255201, -205602, -158726, -647412, 262695, 99193, -205013, -543854, 4720, -886653, -311393, -417763, 229866, -72308, -772866, -239710, 926622, -849959, 475529, 144644, 957878, -871175, 190274, -317426, 862571, 983272, -145824, 701973, -746996, 824144, -746463, -741480, -63959, -682211, -635496, -600986, 177716, 39662, -665106, 712563, -695530, 256898, 941241, 567725, 795905, -252602, -224015, -88031, -765171, -826057, 890811, -678778, 693499, -580017, -536049, 937946, 205519, 330198, -168914, 944251, 525539, 829696, -288802, -55607, -389638, -229951, -575351, 137914, 43583, 314018, -59319, 829059, 145714, -3984, 382874, -842590, -34640, 55321, -526395, -383008, -773401, 654944, 871464, 37550, -941848, 547199, 918651, 382019, -884994, -413973, 321041, 268926, -813319, -561057, 605606, 281108, 776705, -179121, 966720, -103144, 103398, -448175, 794972, -882255, 388202, 851720, 668051, 737459, 87716, 927273, 739507, -885978, 72896, -487410, -433264, 636376, 452120, 272291, 403806, -675822, 67801, 518959, 133564, -956562, 449324, -485232, 794870, -370908, 235455, -661639, 474216, -573364, -611418, 573000, 594046, 857263, -249186, -513185, -488456, 30641, 601206, 351281, -13664, 305164, 146395, 339094, -576720, -558871, -361210, -61476, -661082, -4523, -417615, 405979, 607513, 268563, -427423, 570660, -756932, 921026, -874696, -360895, 58182, -515327, -916825, 271825, -448027, 410506, 244767, -676532, -733591, 482759, -816069, 5392, -639183, 471645, 911534, 738741, 1679, 159573, -533342, -601647, 483078, 799414, 565864, 187200, 697438, 643020, 742934, 550897, -500275, -50385, -61157, -794562, -78004, 210977, 535028, -310719, 880215, 109673, 512107, 672044, -137045, 1872, 842987, -554668, -299379, 298489, -420835, -369161, -646977, 859508, -960486, 489442, -461342, 868109, -547099, -448885, 887046, -573288, 127812, 874459, -159514, 524738, -260508, -883251, -646359, -385294, 930983, 322242, 484503, -524325, -554591, -819739, 534601, -530501, 122655, -336451, 389900, 373253, -469435, 956041, 323451, -196627, 354294, -966802, -461615, -343912, -746137, 63533, 446851, 991278, -567715, -536057, 238305, 360870, -1239, -885852, -163002, -921344, -182910, -898204, -543448, 3953, 97369, -327326, -722893, -982095, 215111, -226171, -720587, -46539, 34148, -15952, 728904, -956648, 37060, -22733, -798870, -469942, 121759, 802211, 182924, 271863, 140067, -568709, -428158, 873220, 341853, 4640, 421398, 949079, -70857, 977471, 683477, -55621, 570550, -779057, -596337, -998274, 524727, -802643, 620633, -322501, 16343, 282704, -189443, -681328, 379651, 519143, 683789, -204873, -567161, 877142, 775791, -931596, 186018, 924691, -538541, 9615, 181881, 683075, -177953, -585563, -867082, 276151, -496382, 197985, -632886, -526792, 802747, 468714, -230129, -858578, -397881, 717185, 445967, -945277, -861747, -592766, -852719, 327917, -467214, 565500, 166614, -969382, -693945, -689871, -935211, 948769, -48514, -568056, 787875, 345415, 766935, 573042, -804056, 914363, -673972, -832134, -472501, -116590, -326051, -59769, 133743, 931537, 484416, 288567, -127749, -839933, -906166, -659232, -683736, 262607, -142319, -381466, -860728, 394895, 294260, 878131, -336705, -802606, -182249, 221963, 202935, 549614, -794584, 604707, 760786, -531907, -276391, -708018, -169079, 229862, -892874, -205948, 10503, -506715, 346608, -241108, -515737, -726915, 711995, 510921, 275411, 619846, -467172, 387929, 669251, 953619, 829768, -103959, -605911, -164685, -98758, -795810, -510136, -426766, -623771, -490066, -568153, 516190, -85013, 852638, 784443, -879539, 381477, 441274, -645144, -832204, -409915, -252421, -872230, 589039, 314770, 626792, -776005, -768180, -151174, -368973, -786025, -567163, 942709, -57942, -877967, -438429, -630685, -230844, 5801, 274567, 995842, -232513, 132964, 509738, 133079, -456155, -624893, 545201, 50153, 250748, -192448, -645826, 284540, -843228, 534257, -256297, -974053, 38905, -185855, 864120, 529332, -313489, 277011, -427392, -889098, 121599, 637790, -894729, 521774, -756973, 707245, 827589, -615578, 482367, 401414, -32868, -572067, -401688, 599017, 316445, 298504, -447004, 44707, 128563, 625511, 771685, 134824, 202764, 298418, 335685, 110718, -200323, -99537, -21683, 668395, 541089, -250550, -850061, -215868, -89381, -306844, 532865, -557675, 189614, 442904, -452866, 2297, -926588, -127134, -494087, -223648, -447458, -576132, -432734, 20388, 410879, -525075, -470679, 996473, 263064, 523746, -972467, 329517, 528626, 981419, -524333, -406177, 307064, -422125, 429727, -11743, 483103, 919771, 33880, -372262, 722513, 708142, -243762, -623075, 432347, 380975, 128456, 504498, 988906, -980975, 231136, -240846, 508847, -515359, 739886, 219163, -907581, -215174, -867844, 899395, -615168, 360741, 647219, -673458, 44255, -981029, 105678, 5784, -396387, -713445, -194131, 639820, -708117, -803597, -906743, 133067, 918310, 84114, -587156, 28614, 656148, -542757, -190592, -366130, -924388, 579326, -458500, 974905, -383003, 69455, -572004, 260052, -494001, -449177, -608549, -605710, -506616, 28658, 644660, 350949, 159334, 994840, 410828, 770879, 105832, 303779, 182803, 213975, 850711, -777448, -473223, -240078, 116195, -598511, 758910, -275135, -923877, 287892, 990412, 643624, -661558, 922306, 946601, -101262, -344787, 325683, 638126, 681417, 562559, 371054, -110546, -453264, -749141, -179887, 292705, 436387, 690703, -80200, -870062, -747833, 226778, -739575, -421555, -47852, 639468, -106768, 654375, 725536, 181926, 119491, 838750, 964845, -700345, 189646, 180971, -446974, -578414, -234314, 950232, -89871, -466195, 849184, -840294, 22594, 681622, 402064, 719439, 977833, -298063, -609214, 379779, 88975, 728993, -441591, 909304, -730311, -156069, -145698, 233694, 754691, -144571, -291495, -335624, 878940, 914670, -643037, -495792, -840325, 718645, -486525, 421517, 764891, -790285, 807144, 263983, -130854, 701417, -528308, 527209, -629844, -60533, -875930, 437394, -201759, 488333, -463030, -840044, 99733, -593929, -87902, 296016, -11423, 769333, -471167, -55912, -984066, -317642, -55471, -572724, -400028, 126318, 985624, 230260, -809756, -944688, -264945, 854614, -509593, -778776, -778519, 355596, -234520, 130405, 787314, 857385, 852004, 907086, -22407, 925084, 83479, 332631, 819448, -243945, -71785, -147295, 309055, 617831, 777398, 830262, -765139, -625586, -649388, 738141, 277987, -118918, -373190, 479889, 167254, -206235, 41712, -426029, -100772, -868500, -876734, 164645, -336758, -25099, 858273, 170640, -539009, -153637, -909522, 716141, -38557, 998612, 36770, 356047, 117705, -941179, -815343, 731903, 637715, 136095, -969426, 408249, 359533, -102784, -661674, -226442, -410203, 806081, -932900, -370948, 743206, 268883, 793214, -11156, 268937, 50538, 28398, -810952, 843850, 996060, -423210, 473777, -931199, 975844, 107287, 744259, 451125, -437483, 260438, 726310, 59538, 550084, 708975, 160762, 173400, -590416, 950861, -682607, -246533, -608384, 184111, 930025, 36132, 447427, 105122, 187306, -840339, -872493, -328451, 234780, -800786, 670803, 11052, -553662, 714515, 41605, 134188, -203665, -626831, -68766, 490953, 36577, 173552, -534970, -961444, -931520, -212907, -104486, -21040, -181033, 344679, 654598, 910778, -42076, -803598, 770378, -119109, 742254, -642086, 642829, -668552, 360156, 161643, 968939, 265587, -723071, 306830, -527563, 728997, -278475, -37579, -852463, 789926, 639150, 698288, -873291, 142078, 612282, -158860, 15664, 914133, -26970, -941569, 960247, -885825, -234374, 249902, 907553, -977199, -188853, -106004, -904849, -650530, -867692, -200264, 17405, 634893, 507090, 811744, 755528, -89412, 749416, 913404, -740356, 260091, 518798, -342615, 482564, -917472, 366203, 394941, -365936, -113921, -391716, 101065, 391035, 932860, 947011, -120993, -807184, -698599, -495656, 679529, 322091, 900204, 177971, -834882, 837693, 244546, 456389, 100223, 48246, -217521, 437671, -610152, 964352, 240498, -923940, 863091, 529643, 641395, 772561, -155934, -578779, 363205, 450589, -396494, -868351, -360882, 56157, 82791, 504315, 166142, -893201, -823530, -600610, -155476, 385184, 224349, 701573, -461537, -678931, 28867, -377440, -947219, 202999, 620535, -73767, -815275, -461784, -69512, 362321};
	int n = sizeof(arr) / sizeof(*arr);
	mergeSort(arr, 0, n - 1);
	printArr(arr, n);
	return 0;
}
